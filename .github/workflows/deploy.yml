name: Deploy to DigitalOcean Droplet

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Copy files via SCP to remote server
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.DO_HOST }} 
          username: ${{ secrets.DO_USER }}
          key: ${{ secrets.DO_SSH_KEY }}
          port: ${{ secrets.DO_PORT }}
          source: "./"
          target: ${{ secrets.DO_TARGET_PATH }}

      - name: Deploy via SSH and run deployment script
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.DO_HOST }} 
          username: ${{ secrets.DO_USER }}
          key: ${{ secrets.DO_SSH_KEY }}
          port: ${{ secrets.DO_PORT }}
          script: |
            cd ${{ secrets.DO_TARGET_PATH }}
            echo "NODE_ENV=${{ env.NODE_ENV }}" > .env
            echo "PORT=${{ env.PORT }}" >> .env
            echo "POSTGRES_HOST=${{ env.POSTGRES_HOST }}" >> .env
            echo "POSTGRES_USER=${{ env.POSTGRES_USER }}" >> .env
            echo "POSTGRES_PASSWORD=${{ env.POSTGRES_PASSWORD }}" >> .env
            echo "POSTGRES_DB=${{ env.POSTGRES_DB }}" >> .env
            cat <<EOF > config/firebase-service-account.json
            {
              "type": "${{ env.FIREBASE_TYPE }}",
              "project_id": "${{ env.FIREBASE_PROJECT_ID }}",
              "private_key_id": "${{ env.FIREBASE_PRIVATE_KEY_ID }}",
              "private_key": "${{ env.FIREBASE_PRIVATE_KEY }}",
              "client_email": "${{ env.FIREBASE_CLIENT_EMAIL }}",
              "client_id": "${{ env.FIREBASE_CLIENT_ID }}",
              "auth_uri": "${{ env.FIREBASE_AUTH_URI }}",
              "token_uri": "${{ env.FIREBASE_TOKEN_URI }}",
              "auth_provider_x509_cert_url": "${{ env.FIREBASE_AUTH_PROVIDER_X509_CERT_URL }}",
              "client_x509_cert_url": "${{ env.FIREBASE_CLIENT_X509_CERT_URL }}",
              "universe_domain": "${{ env.FIREBASE_UNIVERSE_DOMAIN }}"
            }
            EOF
            docker compose -f docker-compose-prod.yml --env-file .env up --build -d

# Environment Variables & Secrets Required:
# - DO_HOST: IP address or hostname of your DigitalOcean droplet
# - DO_USER: SSH username
# - DO_SSH_KEY: Private SSH key (add as a GitHub secret)
# - DO_PORT: SSH port (default 22)
# - DO_TARGET_PATH: Path on droplet where your repo is located
#
# Add these secrets in your repository settings under Settings > Secrets and variables > Actions
#